# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "app".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose   
version: "3.7"

services:

  db:
    image: mysql
    container_name: mIoTHub-mysql
    command: --default-authentication-plugin=caching_sha2_password
    restart: always
    env_file:
      - .env
    ports:
    - "3318:3318" 
    volumes:
    - ./mysql-dump:/docker-entrypoint-initdb.d
    networks:
      hub-network:
        ipv4_address: 172.30.0.109
  adminer:
    image: adminer
    container_name: mIoTHub-mysql-adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      hub-network:
        ipv4_address: 172.30.0.105

  node-red:
    container_name: mIoTHub-rednode
    build:
      context: ./node-red/
      dockerfile: Dockerfile
    image: nodered/node-red:latest
    env_file:
      - .env
    ports:
      - "1880:1880"
    networks:
       hub-network:
        ipv4_address: 172.30.0.101
    volumes:
      - ./node-red/data:/data

  mosquitto:
    container_name: mIoTHub-mosquitto
    image: eclipse-mosquitto
    volumes:
    - ./mosquitto/config:/mosquitto/config
    - ./mosquitto/log:/mosquitto/log
    - ./mosquitto/data/:/mosquitto/data
    restart: always
    networks:
      hub-network:
        ipv4_address: 172.30.0.107
    ports:
    - "1883:1883" 

  influxdb:
    container_name: mIoTHub-influxdb
    image: influxdb:2.7.4
    env_file:
      - .env
    volumes:
    - ./influxdb/data:/var/lib/influxdb2:rw
    ports:
       - 8086:8086
    networks:
       hub-network:
         ipv4_address: 172.30.0.103

  telegraf:
    restart: always
    container_name: mIoTHub-telegraf
    image: telegraf:latest
    env_file:
      - .env
    volumes:
      - ./telegraf/mqtt.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    networks:
      hub-network:
        ipv4_address: 172.30.0.104

  grafana:
    restart: always
    image: grafana/grafana-oss:latest
    container_name: mIoTHub-grafana
    volumes:
      - ./grafana/data:/var/lib/grafana:rw
    depends_on:
      - influxdb
    ports:
      - 3000:3000
    networks:
      hub-network:
        ipv4_address: 172.30.0.106

  sensor-hub:
    build: 
      context: ./service
      dockerfile: ./Dockerfile
    networks:
      hub-network:
        ipv4_address: 172.30.0.108
    depends_on:
      - mosquitto

networks:
  hub-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24